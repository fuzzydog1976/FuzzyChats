name: Fetch FuzzFeed Chat Messages

on:
  workflow_dispatch:
  schedule:
    - cron: '*/10 * * * *'  # every 10 minutes

permissions:
  contents: write

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch messages from Gemini API
        env:
          API_KEY: ${{ secrets.MY_API_KEY }}
        run: |
          mkdir -p data

          PERSONALITIES=$(cat data/personalities.json)

          PROMPT=$(cat <<EOF
You are simulating a group chat. Each participant has a name and a description.

PERSONALITIES:
$PERSONALITIES

TASK:
Generate 5 chat messages. Each message must strictly follow the personality's description.  
Format output as a JSON array ONLY, like this:
[
  { "username": "NAME", "message": "TEXT IN CHARACTER" },
  ...
]
EOF
          )

          RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=$API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
                  \"contents\":[{\"parts\":[{\"text\":\"$PROMPT\"}]}]
                }")

          # Extract the text from Gemini response
          TEXT=$(echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text')

          # Validate and write JSON
          echo "$TEXT" | jq '.' > data/latest.json || echo '[]' > data/latest.json

      - name: Commit and push latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add data/latest.json

          if ! git diff-index --quiet HEAD; then
            git commit -m "Update latest.json [skip ci]"
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:main
          else
            echo "No changes to commit"
